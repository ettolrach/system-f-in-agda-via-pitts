
@article{chargueraud_locally_2012,
	title = {The {Locally} {Nameless} {Representation}},
	volume = {49},
	copyright = {http://www.springer.com/tdm},
	issn = {0168-7433, 1573-0670},
	url = {http://link.springer.com/10.1007/s10817-011-9225-2},
	doi = {10.1007/s10817-011-9225-2},
	language = {en},
	number = {3},
	urldate = {2024-10-18},
	journal = {Journal of Automated Reasoning},
	author = {Charguéraud, Arthur},
	month = oct,
	year = {2012},
	pages = {363--408},
}

@article{church_formulation_1940,
	title = {A formulation of the simple theory of types},
	volume = {5},
	copyright = {https://www.cambridge.org/core/terms},
	issn = {0022-4812, 1943-5886},
	url = {https://www.cambridge.org/core/product/identifier/S0022481200108187/type/journal_article},
	doi = {10.2307/2266170},
	abstract = {The purpose of the present paper is to give a formulation of the simple theory of types which incorporates certain features of the calculus of λ-conversion. A complete incorporation of the calculus of λ-conversion into the theory of types is impossible if we require that λ
              x
              and juxtaposition shall retain their respective meanings as an abstraction operator and as denoting the application of function to argument. But the present partial incorporation has certain advantages from the point of view of type theory and is offered as being of interest on this basis (whatever may be thought of the finally satisfactory character of the theory of types as a foundation for logic and mathematics).
            
            For features of the formulation which are not immediately connected with the incorporation of λ-conversion, we are heavily indebted to Whitehead and Russell, Hilbert and Ackermann, Hilbert and Bernays, and to forerunners of these, as the reader familiar with the works in question will recognize.
            
              The class of
              type symbols
              is described by the rules that ı and
              o
              are each type symbols and that if
              α
              and
              β
              are type symbols then (
              αβ
              ) is a type symbol: it is the least class of symbols which contains the symbols ı and
              o
              and is closed under the operation of forming the symbol (
              αβ
              ) from the symbols
              α
              and
              β
              .},
	language = {en},
	number = {2},
	urldate = {2024-10-18},
	journal = {Journal of Symbolic Logic},
	author = {Church, Alonzo},
	month = jun,
	year = {1940},
	pages = {56--68},
}

@article{church_set_1932,
	title = {A {Set} of {Postulates} for the {Foundation} of {Logic}},
	volume = {33},
	issn = {0003486X},
	url = {https://www.jstor.org/stable/1968337?origin=crossref},
	doi = {10.2307/1968337},
	number = {2},
	urldate = {2024-10-18},
	journal = {The Annals of Mathematics},
	author = {Church, Alonzo},
	month = apr,
	year = {1932},
	pages = {346},
}

@article{wadler_propositions_2015,
	title = {Propositions as types},
	volume = {58},
	issn = {0001-0782, 1557-7317},
	url = {https://dl.acm.org/doi/10.1145/2699407},
	doi = {10.1145/2699407},
	abstract = {Connecting mathematical logic and computation, it ensures that some aspects of programming are absolute.},
	language = {en},
	number = {12},
	urldate = {2024-10-18},
	journal = {Communications of the ACM},
	author = {Wadler, Philip},
	month = nov,
	year = {2015},
	pages = {75--84},
	file = {Accepted Version:/home/ettolrach/Zotero/storage/IDU3KHYS/Wadler - 2015 - Propositions as types.pdf:application/pdf},
}

@incollection{hutton_system_2019,
	address = {Cham},
	title = {System {F} in {Agda}, for {Fun} and {Profit}},
	volume = {11825},
	isbn = {978-3-030-33635-6 978-3-030-33636-3},
	url = {http://link.springer.com/10.1007/978-3-030-33636-3_10},
	language = {en},
	urldate = {2024-10-18},
	booktitle = {Mathematics of {Program} {Construction}},
	publisher = {Springer International Publishing},
	author = {Chapman, James and Kireev, Roman and Nester, Chad and Wadler, Philip},
	editor = {Hutton, Graham},
	year = {2019},
	doi = {10.1007/978-3-030-33636-3_10},
	note = {Series Title: Lecture Notes in Computer Science},
	pages = {255--297},
	file = {Accepted Version:/home/ettolrach/Zotero/storage/P5LGWF9Z/Chapman et al. - 2019 - System F in Agda, for Fun and Profit.pdf:application/pdf},
}

@inproceedings{aydemir_engineering_2008,
	address = {San Francisco California USA},
	title = {Engineering formal metatheory},
	isbn = {978-1-59593-689-9},
	url = {https://dl.acm.org/doi/10.1145/1328438.1328443},
	doi = {10.1145/1328438.1328443},
	language = {en},
	urldate = {2024-10-18},
	booktitle = {Proceedings of the 35th annual {ACM} {SIGPLAN}-{SIGACT} symposium on {Principles} of programming languages},
	publisher = {ACM},
	author = {Aydemir, Brian and Charguéraud, Arthur and Pierce, Benjamin C. and Pollack, Randy and Weirich, Stephanie},
	month = jan,
	year = {2008},
	pages = {3--15},
	file = {Submitted Version:/home/ettolrach/Zotero/storage/LWRPYLY7/Aydemir et al. - 2008 - Engineering formal metatheory.pdf:application/pdf},
}

@article{pitts_locally_2023,
	title = {Locally {Nameless} {Sets}},
	volume = {7},
	issn = {2475-1421},
	url = {https://dl.acm.org/doi/10.1145/3571210},
	doi = {10.1145/3571210},
	abstract = {This paper provides a new mathematical foundation for the locally nameless representation of syntax with binders, one informed by nominal techniques. It gives an equational axiomatization of two key locally nameless operations, "variable opening" and "variable closing" and shows that a lot of the locally nameless infrastructure can be defined from that in a syntax-independent way, including crucially a "shift" functor for name binding. That functor operates on a category whose objects we call
              locally nameless sets
              . Functors combining shift with sums and products have initial algebras that recover the usual locally nameless representation of syntax with binders in the finitary case. We demonstrate this by uniformly constructing such an initial locally nameless set for each instance of Plotkin's notion of binding signature. We also show by example that the shift functor is useful for locally nameless sets of a semantic rather than a syntactic character. The category of locally nameless sets is proved to be isomorphic to a known topos of finitely supported M-sets, where M is the full transformation monoid on a countably infinite set. A corollary of the proof is that several categories that have been used in the literature to model variable renaming operations on syntax with binders are all equivalent to each other and to the category of locally nameless sets.},
	language = {en},
	number = {POPL},
	urldate = {2024-10-18},
	journal = {Proceedings of the ACM on Programming Languages},
	author = {Pitts, Andrew M.},
	month = jan,
	year = {2023},
	pages = {488--514},
	file = {Full Text:/home/ettolrach/Zotero/storage/VBZMC2GK/Pitts - 2023 - Locally Nameless Sets.pdf:application/pdf},
}

@book{wadler_programming_2022,
	title = {Programming {Language} {Foundations} in {Agda}},
	url = {https://plfa.inf.ed.ac.uk/22.08/},
	author = {Wadler, Philip and Kokke, Wen and Siek, Jeremy G.},
	month = aug,
	year = {2022},
}

@incollection{gries_what_2003,
	address = {New York, NY},
	title = {What do types mean? — {From} intrinsic to extrinsic semantics},
	isbn = {978-1-4419-2964-8 978-0-387-21798-7},
	shorttitle = {What do types mean?},
	url = {https://link.springer.com/10.1007/978-0-387-21798-7_15},
	language = {en},
	urldate = {2024-10-17},
	booktitle = {Programming {Methodology}},
	publisher = {Springer New York},
	author = {Reynolds, John C.},
	editor = {Gries, David and Schneider, Fred B. and McIver, Annabelle and Morgan, Carroll},
	year = {2003},
	doi = {10.1007/978-0-387-21798-7_15},
	note = {Series Title: Monographs in Computer Science},
	pages = {309--327},
}

@incollection{goos_towards_1974,
	address = {Berlin, Heidelberg},
	title = {Towards a theory of type structure},
	volume = {19},
	isbn = {978-3-540-06859-4 978-3-540-37819-8},
	url = {http://link.springer.com/10.1007/3-540-06859-7_148},
	urldate = {2024-10-17},
	booktitle = {Programming {Symposium}},
	publisher = {Springer Berlin Heidelberg},
	author = {Reynolds, John C.},
	editor = {Goos, G. and Hartmanis, J. and Brinch Hansen, P. and Gries, D. and Moler, C. and Seegmüller, G. and Wirth, N. and Robinet, B.},
	year = {1974},
	doi = {10.1007/3-540-06859-7_148},
	note = {Series Title: Lecture Notes in Computer Science},
	pages = {408--425},
	file = {Submitted Version:/home/ettolrach/Zotero/storage/BLAM3W2R/Reynolds - 1974 - Towards a theory of type structure.pdf:application/pdf},
}

@phdthesis{girard_interpretation_1972,
	type = {Thèse de doctorat d'État},
	title = {Interprétation fonctionnelle et élimination des coupures de l'arithmétique d'ordre supérieur},
	school = {Univerité Paris VII},
	author = {Girard, J.-Y.},
	year = {1972},
}

@article{boolos_freges_1995,
	title = {Frege's {Theorem} and the {Peano} {Postulates}},
	volume = {1},
	copyright = {https://www.cambridge.org/core/terms},
	issn = {1079-8986, 1943-5894},
	url = {https://www.cambridge.org/core/product/identifier/S1079898600008118/type/journal_article},
	doi = {10.2307/421158},
	abstract = {Two thoughts about the concept of number are incompatible: that any zero or more things have a (cardinal) number, and that any zero or more things have a number (if and) only if they are the members of some one set. It is Russell's paradox that shows the thoughts incompatible: the sets that are not members of themselves cannot be the members of any one set. The thought that any (zero or more) things have a number is Frege's; the thought that things have a number only if they are the members of a set may be Cantor's and is in any case a commonplace of the usual contemporary presentations of the set theory that originated with Cantor and has become ZFC.
            
              In recent years a number of authors have examined Frege's accounts of arithmetic with a view to extracting an interesting subtheory from Frege's formal system, whose inconsistency, as is well known, was demonstrated by Russell. These accounts are contained in Frege's formal treatise
              Grundgesetze der Arithmetik
              and his earlier exoteric book
              Die Grundlagen der Arithmetik
              . We may describe the two central results of the recent re-evaluation of his work in the following way: Let
              Frege arithmetic
              be the result of adjoining to full axiomatic second-order logic a suitable formalization of the statement that the
              Fs
              and the
              Gs
              have the same number if and only if the
              F
              sand the
              Gs
              are equinumerous.},
	language = {en},
	number = {3},
	urldate = {2024-10-17},
	journal = {Bulletin of Symbolic Logic},
	author = {Boolos, George},
	month = sep,
	year = {1995},
	pages = {317--326},
	file = {PDF:/home/ettolrach/Zotero/storage/959C45BR/Boolos - 1995 - Frege's Theorem and the Peano Postulates.pdf:application/pdf},
}

@mastersthesis{kusee_compiling_2017,
	address = {Utrecht},
	title = {Compiling {Agda} to {Haskell} with fewer coercions},
	url = {https://studenttheses.uu.nl/bitstream/handle/20.500.12932/28192/3800296.pdf},
	school = {University of Utrecht},
	author = {Kusee, WH},
	month = dec,
	year = {2017},
}

@incollection{berghofer_brief_2009,
	address = {Berlin, Heidelberg},
	title = {A {Brief} {Overview} of {Agda} – {A} {Functional} {Language} with {Dependent} {Types}},
	volume = {5674},
	isbn = {978-3-642-03358-2 978-3-642-03359-9},
	url = {http://link.springer.com/10.1007/978-3-642-03359-9_6},
	urldate = {2024-10-17},
	booktitle = {Theorem {Proving} in {Higher} {Order} {Logics}},
	publisher = {Springer Berlin Heidelberg},
	author = {Bove, Ana and Dybjer, Peter and Norell, Ulf},
	editor = {Berghofer, Stefan and Nipkow, Tobias and Urban, Christian and Wenzel, Makarius},
	year = {2009},
	doi = {10.1007/978-3-642-03359-9_6},
	note = {Series Title: Lecture Notes in Computer Science},
	pages = {73--78},
	file = {PDF:/home/ettolrach/Zotero/storage/GGCCHD8E/Bove et al. - 2009 - A Brief Overview of Agda – A Functional Language with Dependent Types.pdf:application/pdf},
}

@phdthesis{norell_towards_2007,
	address = {SE-412 96 Göteborg, Sweden},
	type = {{PhD} {Thesis}},
	title = {Towards a practical programming language based on dependent type theory},
	school = {Department of Computer Science and Engineering, Chalmers University of Technology},
	author = {Norell, Ulf},
	month = sep,
	year = {2007},
	file = {PDF:/home/ettolrach/Zotero/storage/AR8MB2N3/Norell - 2007 - Towards a practical programming language based on dependent type theory.pdf:application/pdf},
}

@article{milner_theory_1978,
	title = {A theory of type polymorphism in programming},
	volume = {17},
	copyright = {https://www.elsevier.com/tdm/userlicense/1.0/},
	issn = {00220000},
	url = {https://linkinghub.elsevier.com/retrieve/pii/0022000078900144},
	doi = {10.1016/0022-0000(78)90014-4},
	language = {en},
	number = {3},
	urldate = {2024-10-17},
	journal = {Journal of Computer and System Sciences},
	author = {Milner, Robin},
	month = dec,
	year = {1978},
	pages = {348--375},
	file = {Submitted Version:/home/ettolrach/Zotero/storage/JWZ8IJSJ/Milner - 1978 - A theory of type polymorphism in programming.pdf:application/pdf},
}

@book{pierce_types_2002,
	address = {Cambridge, Massachusetts},
	title = {Types and programming languages},
	isbn = {978-0-262-16209-8 978-0-262-25681-0},
	abstract = {A type system is a syntactic method for automatically checking the absence of certain erroneous behaviors by classifying program phrases according to the kinds of values they compute. The study of type systems--and of programming languages from a type-theoretic perspective -- -has important applications in software engineering, language design, high-performance compilers, and security.This text provides a comprehensive introduction both to type systems in computer science and to the basic theory of programming languages. The approach is pragmatic and operational; each new concept is motivated by programming examples and the more theoretical sections are driven by the needs of implementations. Each chapter is accompanied by numerous exercises and solutions, as well as a running implementation, available via the Web. Dependencies between chapters are explicitly identified, allowing readers to choose a variety of paths through the material.The core topics include the untyped lambda-calculus, simple type systems, type reconstruction, universal and existential polymorphism, subtyping, bounded quantification, recursive types, kinds, and type operators. Extended case studies develop a variety of approaches to modeling the features of object-oriented languages},
	language = {eng},
	publisher = {MIT Press},
	author = {Pierce, Benjamin C.},
	year = {2002},
	annote = {Includes bibliographical references (p. [567]-603) and index. - Description based on PDF viewed 12/29/2015},
}

@article{church_properties_1936,
	title = {Some properties of conversion},
	volume = {39},
	issn = {0002-9947, 1088-6850},
	url = {https://www.ams.org/tran/1936-039-03/S0002-9947-1936-1501858-0/},
	doi = {10.1090/S0002-9947-1936-1501858-0},
	language = {en},
	number = {3},
	urldate = {2024-10-17},
	journal = {Transactions of the American Mathematical Society},
	author = {Church, Alonzo and Rosser, J. B.},
	year = {1936},
	pages = {472--482},
	file = {Full Text:/home/ettolrach/Zotero/storage/48DH69HL/Church and Rosser - 1936 - Some properties of conversion.pdf:application/pdf},
}

@incollection{hutchison_sharing_2005,
	address = {Berlin, Heidelberg},
	title = {Sharing in the {Weak} {Lambda}-{Calculus}},
	volume = {3838},
	isbn = {978-3-540-30911-6 978-3-540-32425-6},
	url = {http://link.springer.com/10.1007/11601548_7},
	urldate = {2025-02-21},
	booktitle = {Processes, {Terms} and {Cycles}: {Steps} on the {Road} to {Infinity}},
	publisher = {Springer Berlin Heidelberg},
	author = {Blanc, Tomasz and Lévy, Jean-Jacques and Maranget, Luc},
	editor = {Hutchison, David and Kanade, Takeo and Kittler, Josef and Kleinberg, Jon M. and Mattern, Friedemann and Mitchell, John C. and Naor, Moni and Nierstrasz, Oscar and Pandu Rangan, C. and Steffen, Bernhard and Sudan, Madhu and Terzopoulos, Demetri and Tygar, Dough and Vardi, Moshe Y. and Weikum, Gerhard and Middeldorp, Aart and Van Oostrom, Vincent and Van Raamsdonk, Femke and De Vrijer, Roel},
	year = {2005},
	doi = {10.1007/11601548_7},
	note = {Series Title: Lecture Notes in Computer Science},
	pages = {70--87},
}

@article{plotkin_lcf_1977,
	title = {{LCF} considered as a programming language},
	volume = {5},
	copyright = {https://www.elsevier.com/tdm/userlicense/1.0/},
	issn = {03043975},
	url = {https://linkinghub.elsevier.com/retrieve/pii/0304397577900445},
	doi = {10.1016/0304-3975(77)90044-5},
	language = {en},
	number = {3},
	urldate = {2025-02-21},
	journal = {Theoretical Computer Science},
	author = {Plotkin, G.D.},
	month = dec,
	year = {1977},
	pages = {223--255},
}

@article{cagman_combinatory_1998,
	title = {Combinatory weak reduction in lambda calculus},
	volume = {198},
	copyright = {https://www.elsevier.com/tdm/userlicense/1.0/},
	issn = {03043975},
	url = {https://linkinghub.elsevier.com/retrieve/pii/S0304397597002508},
	doi = {10.1016/S0304-3975(97)00250-8},
	language = {en},
	number = {1-2},
	urldate = {2025-02-21},
	journal = {Theoretical Computer Science},
	author = {Çağman, Naim and Hindley, J.Roger},
	month = may,
	year = {1998},
	pages = {239--247},
}

@misc{the_agda_community_agda_2024,
	title = {Agda {Standard} {Library}},
	url = {https://github.com/agda/agda-stdlib},
	urldate = {2025-02-21},
	author = {{The Agda Community}},
	month = jul,
	year = {2024},
}

@incollection{howard_formulae-as-types_1980,
	title = {The {Formulae}-as-{Types} {Notion} of {Construction}},
	booktitle = {To {H}. {B}. {Curry}: {Essays} on {Combinatory} {Logic}, {Lambda} {Calculus}, and {Formalism}},
	publisher = {Academic Press},
	author = {Howard, William Alvin},
	editor = {Curry, Haskell and B, Hindley and Roger, Seldin J. and Jonathan, P.},
	year = {1980},
	annote = {Originally sent privately in 1969.
},
	file = {PDF:/home/ettolrach/Zotero/storage/DVZ952FK/Howard - 1980 - The Formulae-as-Types Notion of Construction.pdf:application/pdf},
}

@article{turing_computable_1937,
	title = {On {Computable} {Numbers}, with an {Application} to the {Entscheidungsproblem}},
	volume = {s2-42},
	copyright = {http://doi.wiley.com/10.1002/tdm\_license\_1.1},
	issn = {00246115},
	url = {http://doi.wiley.com/10.1112/plms/s2-42.1.230},
	doi = {10.1112/plms/s2-42.1.230},
	language = {en},
	number = {1},
	urldate = {2025-02-21},
	journal = {Proceedings of the London Mathematical Society},
	author = {Turing, A. M.},
	year = {1937},
	pages = {230--265},
	file = {PDF:/home/ettolrach/Zotero/storage/MQUMTGCV/Turing - 1937 - On Computable Numbers, with an Application to the Entscheidungsproblem.pdf:application/pdf},
}

@misc{chargueraud_lambda_jar_paperv_2023,
	title = {Lambda\_JAR\_paper.v},
	url = {https://github.com/charguer/formalmetacoq/blob/ab4d006e468e352efd16d8e3fd89ad74a23d889d/ln/Lambda_JAR_paper.v#L321},
	urldate = {2025-02-22},
	author = {Charguéraud, Arthur},
	month = may,
	year = {2023},
}
